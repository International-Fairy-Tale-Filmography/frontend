@using FrontEnd.Core.Data
@using FrontEnd.Core.Data.Models
@using FrontEnd.Core.Services
@inject HttpClient Http

@* @if (ds != null)
{
    <p>
        @ds.Companies.Count Companies -
        @ds.Countries.Count Countries -
        @ds.Languages.Count Languages -
        @ds.Origins.Count Origins -
        @ds.People.Count People -
        @ds.Films.Count Films
    </p>
}
 *@
<div class="alert alert-secondary" style="margin-top:12px">
    
    
    <div class="input-group">
        <button class="btn btn-secondary" type="button" @onclick="Search"><i class="bi bi-search"></i></button>
        <input type="text" @bind-value="searchTitle" class="form-control form-control-lg" placeholder="Enter film title" aria-label="Enter film title">

        <button class="btn btn-secondary"  type="button">Advanced</button>
    </div>
    


</div>


<ul class="unstyled list-manager">


    @foreach (var i in results)
    {
        <li>

            <a class="nopad" href="/Home/Film/@i.FilmId"><i class="bi bi-film"></i></a>
            <em>
                <a class="italics" href="/Home/Film/@i.FilmId">@i.Title</a>
            </em>
            
            @*   1979.

            Directed by <a class="nopad" href="/Search/ByDirector/7783">Ina Rarisch</a>.

            <a class="nopad" href="/Search/ByCountry/996">East Germany</a>:
        *@
            @if (i.Company != null)
            {
                
                <a class="nopad" href="/Search/ByCompany/@i.Company.CompanyId">
                    @i.Company.Name
                </a>                
            }

.

             
            
        </li>
    }

</ul>
@code
{
    private string searchTitle = "";

    private List<Film> results = new List<Film>();
    DataContext ds = null;
    private async Task Fetch()
    {
        ds = new DataContext();
        var baseUrl = "https://international-fairy-tale-filmography.github.io/data/csv/";
        var svc = new DataSourceService(Http, baseUrl);

        await svc.FetchData(ds);

    }

    protected override async Task OnInitializedAsync()
    {
        await Task.Delay(1);

        await Fetch();
    }

    private void Search()
    {
        results = ds.Films.Where(i => i.Title.ToLowerInvariant().Contains(searchTitle)).ToList();
    }


}