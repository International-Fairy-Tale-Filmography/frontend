@page "/film"

@using Microsoft.EntityFrameworkCore
@inject DataEditorDataContext ctx
@inject IDialogService DialogService

<h3>FilmList</h3>

<MudButton OnClick="@AddItem" Color="@Color.Success" Class="add-item-btn">Add Item</MudButton>

<MudDataGrid @ref="grid" T="Film" Items="@Films" ReadOnly="true" Virtualize="true"
             Bordered="true" Dense="true" Loading="_loading">
    <Columns>
        <TemplateColumn CellClass="d-flex justify-end">
            <CellTemplate>
                <MudIconButton Size="@Size.Small" Icon="@Icons.Material.Outlined.Edit" OnClick="@((e) => EditCell(context.Item))" />
            </CellTemplate>
        </TemplateColumn>
        <PropertyColumn Property="x => x.Title"  />
        <PropertyColumn Property="x => x.OtherTitle" Required="false"/>
        <PropertyColumn Property="x => x.Color"/>
        <PropertyColumn Property="x => x.ReleaseYear"/>
        <PropertyColumn Property="x => x.Duration"/> 
        <PropertyColumn Property="x => x.Mode"/>
        @*         <PropertyColumn Property="x => x.Comment" /> *@
        <PropertyColumn Property="x => x.Published"/>



        @* <PropertyColumn Property="x => x.Position">
            <EditTemplate>
                <MudSelect @bind-Value="context.Item.Position" Required RequiredError="You must select a Position!!!" Margin="@Margin.Dense">
                    <MudSelectItem Value="0">zero</MudSelectItem>
                    <MudSelectItem Value="1">one</MudSelectItem>
                    <MudSelectItem Value="17">seventeen</MudSelectItem>
                </MudSelect>
            </EditTemplate>
        </PropertyColumn> *@


    </Columns>
    <PagerContent>
        <MudDataGridPager T="Film" />
    </PagerContent>
</MudDataGrid>


@code {
    public bool _loading { get; set; }

    public List<Film> Films { get; set; } = new List<Film>();
    protected override async Task OnInitializedAsync()
    {
        await Refresh();
    }

    async Task Refresh()
    {
        _loading = true;
        Thread.Sleep(10);
        Films = await ctx.Films.ToListAsync();
        _loading = false;
    }

    async Task<EventCallback> EditCell(Film cell)
    {
        await EditItem(cell.FilmId);
        return EventCallback.Empty;
    }
    async Task AddItem()
    {
         await EditItem(0);
    }

    async Task  EditItem(int id)
    {
        var parameters = new DialogParameters<FilmEdit> { { x => x.Id, id } };
        var dialog = DialogService.ShowAsync<FilmEdit>("Edit Film", parameters);
        await Refresh();
    }


    public MudDataGrid<Film> grid { get; set; }

}
